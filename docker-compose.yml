version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www:cached
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: rolatex
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: 20Passwd02
      MYSQL_PASSWORD: 20Passwd02
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # phpmyadmin
  phpmyadmin:
    depends_on:
    - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
    - '8080:80'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 20Passwd02
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    ports:
    - 1025:1025 # smtp server
    - 8025:8025 # web ui

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
